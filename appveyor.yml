environment:
  global:
    RUST_VERSION: stable
    CRATE_NAME: cloak
    CARGO_HOME: "c:\\cargo"
    RUSTUP_HOME: "c:\\rustup"

  matrix:
    - TARGET: x86_64-pc-windows-msvc
    - TARGET: i686-pc-windows-msvc

# Install Rust and Cargo
install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\cargo\bin
  - rustc -Vv
  - cargo -V

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false

# Equivalent to Travis' `script` phase
test_script:
  - cargo test --target %TARGET% --verbose
  - cargo run --target %TARGET% -- view test_app

before_deploy:
  # Generate artifacts for release
  - cargo build --release --verbose
  - ps: ci\before_deploy.ps1

deploy:
  description: 'Windows release'
  artifact: /.*\.zip/
  # Here's how:
  # - Go to 'https://github.com/settings/tokens/new' and generate a Token with only the
  # `public_repo` scope enabled
  # - Then go to 'https://ci.appveyor.com/tools/encrypt' and enter the newly generated token.
  # - Enter the "encrypted value" below
  auth_token:
    secure: chvt6Gw6dTdrWFr5c1qFmCdylM8Qbk9VDEO4Z5zu/cNg9EhCHYtG98BEIB9WgFxx
  provider: GitHub
  on:
    RUST_VERSION: stable
    appveyor_repo_tag: true

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false
